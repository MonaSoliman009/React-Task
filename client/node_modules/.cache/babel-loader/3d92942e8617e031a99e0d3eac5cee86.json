{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DeLL\\\\OneDrive\\\\Desktop\\\\Task\\\\client\\\\task\\\\src\\\\pages\\\\practice\\\\practice.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { instance } from \"../../axios/axiosInstance\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Stack from \"@mui/material/Stack\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport Alert from \"@mui/material/Alert\";\nimport \"./practice.css\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Practice = () => {\n  _s();\n\n  const [activeStep, setActiveStep] = useState(0);\n  const [skipped, setSkipped] = useState(new Set());\n  const [words, setWords] = useState([]);\n  const [word, setWord] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [answer, setAnswer] = useState(\"\");\n  const history = useHistory();\n\n  function getWords() {\n    instance.get(\"words\").then(res => {\n      console.log(res.data);\n      setWords(res.data);\n    });\n  }\n\n  useEffect(() => {\n    getWords();\n    setOptions([\"verb\", \"adjective\", \"noun\", \"adverb\"].sort(function () {\n      return 0.5 - Math.random();\n    }));\n  }, []);\n  useEffect(() => {\n    if (words) {\n      setWord(words[0]);\n    }\n  }, [words]);\n  useEffect(() => {\n    if (correctAnswers) {\n      setProgress(prevProgress => prevProgress >= 100 ? 0 : correctAnswers / 10 * 100);\n    }\n  }, [correctAnswers]);\n  useEffect(() => {\n    if (activeStep === 10) {\n      setActiveStep(0);\n      history.push(\"/rank\");\n    }\n  }, [activeStep]);\n\n  const isStepOptional = step => {\n    return false;\n  };\n\n  const handleAnswer = option => {\n    if (word.pos == option) {\n      // alert(\"true\");\n      setAnswer(true);\n      setCorrectAnswers(correctAnswers + 1);\n    } else {\n      // alert(\"false\");\n      setAnswer(false);\n    }\n\n    setOpen(true);\n    setTimeout(() => {\n      setOpen(false);\n      handleNext();\n    }, 1500);\n    console.log(word, option);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped; // if (isStepSkipped(activeStep)) {\n    //   newSkipped = new Set(newSkipped.values());\n    //   newSkipped.delete(activeStep);\n    // }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n    setWord(words[activeStep + 1]);\n    setOptions([\"verb\", \"adjective\", \"noun\", \"adverb\"].sort(function () {\n      return 0.5 - Math.random();\n    }));\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    getWords();\n    setCorrectAnswers(0);\n    setProgress(0);\n  };\n\n  function LinearProgressWithLabel(props) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\",\n          mr: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 35\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: `${Math.round(props.value)}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"my-5 m-auto\",\n    style: {\n      width: \"80%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      children: words.map((word, index) => {\n        const stepProps = {};\n        const labelProps = {};\n\n        if (isStepOptional(index)) {\n          labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Optional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n          children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n            children: [\"Question \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), activeStep === words.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 2,\n          mb: 1\n        },\n        className: \"my-5 font-weight-bold fs-1 text-center\",\n        children: \"All questions completed - you're finished\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          pt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: \"1 1 auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"fs-3\",\n          onClick: handleReset,\n          children: \"Play again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"mx-5 my-5\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          className: \"fs-1\",\n          children: word ? word.word : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 5,\n        direction: \"row\",\n        className: \"mx-5 \",\n        children: options.map((option, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                fontSize: {\n                  lg: 15,\n                  md: 15,\n                  sm: 15,\n                  xs: 10\n                }\n              },\n              size: \"medium\",\n              variant: \"contained\",\n              onClick: () => {\n                handleAnswer(option);\n              },\n              disabled: open,\n              children: option\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          pt: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      style: {\n        width: \"40%\",\n        margin: \"auto\"\n      },\n      in: open,\n      children: answer ? /*#__PURE__*/_jsxDEV(Alert, {\n        sx: {\n          mb: 2\n        },\n        children: \"Correct\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: \"Wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"40%\",\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(LinearProgressWithLabel, {\n        value: progress,\n        className: \"mt-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Practice, \"JnLtuUR+N0fKf0k8fpsaTMIsjf0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Practice;\nexport default Practice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","Box","Stepper","Step","StepLabel","Button","Typography","instance","CardContent","Stack","LinearProgress","Alert","Collapse","Practice","activeStep","setActiveStep","skipped","setSkipped","Set","words","setWords","word","setWord","options","setOptions","progress","setProgress","correctAnswers","setCorrectAnswers","open","setOpen","answer","setAnswer","history","getWords","get","then","res","console","log","data","sort","Math","random","prevProgress","push","isStepOptional","step","handleAnswer","option","pos","setTimeout","handleNext","newSkipped","prevActiveStep","handleReset","LinearProgressWithLabel","props","display","alignItems","width","mr","minWidth","round","value","map","index","stepProps","labelProps","optional","length","mt","mb","flexDirection","pt","flex","fontSize","lg","md","sm","xs","margin"],"sources":["C:/Users/DeLL/OneDrive/Desktop/Task/client/task/src/pages/practice/practice.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stepper from \"@mui/material/Stepper\";\r\nimport Step from \"@mui/material/Step\";\r\nimport StepLabel from \"@mui/material/StepLabel\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { instance } from \"../../axios/axiosInstance\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport \"./practice.css\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nconst Practice = () => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skipped, setSkipped] = useState(new Set());\r\n  const [words, setWords] = useState([]);\r\n  const [word, setWord] = useState(\"\");\r\n  const [options, setOptions] = useState([]);\r\n  const [progress, setProgress] = useState(0);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const history = useHistory();\r\n  function getWords() {\r\n    instance.get(\"words\").then((res) => {\r\n      console.log(res.data);\r\n      setWords(res.data);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    getWords();\r\n    setOptions(\r\n      [\"verb\", \"adjective\", \"noun\", \"adverb\"].sort(function () {\r\n        return 0.5 - Math.random();\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (words) {\r\n      setWord(words[0]);\r\n    }\r\n  }, [words]);\r\n\r\n  useEffect(() => {\r\n    if (correctAnswers) {\r\n      setProgress((prevProgress) =>\r\n        prevProgress >= 100 ? 0 : (correctAnswers / 10) * 100\r\n      );\r\n    }\r\n  }, [correctAnswers]);\r\n\r\n  useEffect(() => {\r\n    if (activeStep === 10) {\r\n      setActiveStep(0)\r\n      history.push(\"/rank\");\r\n      \r\n    }\r\n  }, [activeStep]);\r\n\r\n  const isStepOptional = (step) => {\r\n    return false;\r\n  };\r\n\r\n  const handleAnswer = (option) => {\r\n    if (word.pos == option) {\r\n      // alert(\"true\");\r\n      setAnswer(true);\r\n      setCorrectAnswers(correctAnswers + 1);\r\n    } else {\r\n      // alert(\"false\");\r\n      setAnswer(false);\r\n    }\r\n    setOpen(true);\r\n    setTimeout(() => {\r\n      setOpen(false);\r\n      handleNext();\r\n    }, 1500);\r\n\r\n    console.log(word, option);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    // if (isStepSkipped(activeStep)) {\r\n    //   newSkipped = new Set(newSkipped.values());\r\n    //   newSkipped.delete(activeStep);\r\n    // }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n    setWord(words[activeStep + 1]);\r\n    setOptions(\r\n      [\"verb\", \"adjective\", \"noun\", \"adverb\"].sort(function () {\r\n        return 0.5 - Math.random();\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    getWords();\r\n    setCorrectAnswers(0);\r\n    setProgress(0);\r\n  };\r\n  function LinearProgressWithLabel(props) {\r\n    return (\r\n      <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <Box sx={{ width: \"100%\", mr: 1 }}>\r\n          <LinearProgress variant=\"determinate\" {...props} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 35 }}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\r\n            props.value\r\n          )}%`}</Typography>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <Box className=\"my-5 m-auto\" style={{ width: \"80%\" }}>\r\n      <Stepper activeStep={activeStep}>\r\n        {words.map((word, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = (\r\n              <Typography variant=\"caption\">Optional</Typography>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <Step key={index} {...stepProps}>\r\n              <StepLabel {...labelProps}>Question {index + 1}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      {activeStep === words.length ? (\r\n        <React.Fragment>\r\n          <Typography\r\n            sx={{ mt: 2, mb: 1 }}\r\n            className=\"my-5 font-weight-bold fs-1 text-center\"\r\n          >\r\n            All questions completed - you&apos;re finished\r\n          </Typography>\r\n          <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\r\n            <Box sx={{ flex: \"1 1 auto\" }} />\r\n            <Button className=\"fs-3\" onClick={handleReset}>\r\n              Play again\r\n            </Button>\r\n          </Box>\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <CardContent className=\"mx-5 my-5\">\r\n            <Typography variant=\"h5\" component=\"div\" className=\"fs-1\">\r\n              {word ? word.word : \"\"}\r\n            </Typography>\r\n          </CardContent>\r\n          <Stack spacing={5} direction=\"row\" className=\"mx-5 \">\r\n            {options.map((option, index) => {\r\n              return (\r\n                <>\r\n                  <Button\r\n                    sx={{\r\n                      fontSize: {\r\n                        lg: 15,\r\n                        md: 15,\r\n                        sm: 15,\r\n                        xs: 10,\r\n                      },\r\n                    }}\r\n                    key={index}\r\n                    size=\"medium\"\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      handleAnswer(option);\r\n                    }}\r\n                    disabled={open}\r\n                  >\r\n                    {option}\r\n                  </Button>\r\n                </>\r\n              );\r\n            })}\r\n          </Stack>\r\n\r\n          <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}></Box>\r\n        </React.Fragment>\r\n      )}\r\n      <Collapse style={{ width: \"40%\", margin: \"auto\" }} in={open}>\r\n        {answer ? (\r\n          <Alert sx={{ mb: 2 }}>Correct</Alert>\r\n        ) : (\r\n          <Alert severity=\"error\">Wrong</Alert>\r\n        )}\r\n      </Collapse>\r\n      <Box sx={{ width: \"40%\", margin: \"auto\" }}>\r\n        <LinearProgressWithLabel value={progress} className=\"mt-5\" />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Practice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}