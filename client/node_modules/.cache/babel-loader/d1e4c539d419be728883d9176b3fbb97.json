{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DeLL\\\\OneDrive\\\\Desktop\\\\Task\\\\client\\\\task\\\\src\\\\pages\\\\practice.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { instance } from \"../axios/axiosInstance\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\"; // const steps = [\n//   \"Question 1\",\n//   \"Question 2\",\n//   \"Question 3\",\n//   \"Question 4\",\n//   \"Question 5\",\n//   \"Question 6\",\n//   \"Question 7\",\n//   \"Question 8\",\n//   \"Question 9\",\n//   \"Question 10\",\n// ];\n// yourArray.sort(function() { return 0.5 - Math.random() });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Practice = () => {\n  _s();\n\n  const [activeStep, setActiveStep] = useState(0);\n  const [skipped, setSkipped] = useState(new Set());\n  const [words, setWords] = useState([]);\n  const [word, setWord] = useState(\"\");\n  const [options, setOptions] = useState([]);\n\n  function getWords() {\n    instance.get(\"words\").then(res => {\n      console.log(res.data);\n      setWords(res.data);\n    });\n  }\n\n  useEffect(() => {\n    getWords();\n    setOptions([\"verb\", \"adjective\", \"noun\", \"adverb\"].sort(function () {\n      return 0.5 - Math.random();\n    }));\n  }, []);\n  useEffect(() => {\n    if (words) {\n      setWord(words[0]);\n    }\n  }, [words]);\n\n  const isStepOptional = step => {\n    return false;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n    setWord(words[activeStep + 1]);\n    setOptions([\"verb\", \"adjective\", \"noun\", \"adverb\"].sort(function () {\n      return 0.5 - Math.random();\n    }));\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    getWords();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      className: \"mt-5\",\n      children: words.map((word, index) => {\n        const stepProps = {};\n        const labelProps = {};\n\n        if (isStepOptional(index)) {\n          labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Optional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this);\n        }\n\n        if (isStepSkipped(index)) {\n          stepProps.completed = false;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n          children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n            children: [\"Question \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), activeStep === words.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 2,\n          mb: 1\n        },\n        children: \"All steps completed - you're finished\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          pt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: \"1 1 auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"mx-5 my-5\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              children: word ? word.word : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 5,\n            direction: \"row\",\n            className: \"mx-5 \",\n            children: options.map((option, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          pt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: \"1 1 auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), isStepOptional(activeStep) && /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: handleSkip,\n          sx: {\n            mr: 1\n          },\n          children: \"Skip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleNext,\n          children: activeStep === words.length - 1 ? \"Finish\" : \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Practice, \"rEebab56KwXPqcaLn5m15PB35SE=\");\n\n_c = Practice;\nexport default Practice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","useState","useEffect","Box","Stepper","Step","StepLabel","Button","Typography","instance","CardContent","Grid","Stack","Practice","activeStep","setActiveStep","skipped","setSkipped","Set","words","setWords","word","setWord","options","setOptions","getWords","get","then","res","console","log","data","sort","Math","random","isStepOptional","step","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","width","map","index","stepProps","labelProps","optional","completed","length","mt","mb","display","flexDirection","pt","flex","option","mr"],"sources":["C:/Users/DeLL/OneDrive/Desktop/Task/client/task/src/pages/practice.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Stepper from \"@mui/material/Stepper\";\r\nimport Step from \"@mui/material/Step\";\r\nimport StepLabel from \"@mui/material/StepLabel\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { instance } from \"../axios/axiosInstance\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\n// const steps = [\r\n//   \"Question 1\",\r\n//   \"Question 2\",\r\n//   \"Question 3\",\r\n//   \"Question 4\",\r\n//   \"Question 5\",\r\n//   \"Question 6\",\r\n//   \"Question 7\",\r\n//   \"Question 8\",\r\n//   \"Question 9\",\r\n//   \"Question 10\",\r\n// ];\r\n// yourArray.sort(function() { return 0.5 - Math.random() });\r\nconst Practice = () => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skipped, setSkipped] = useState(new Set());\r\n  const [words, setWords] = useState([]);\r\n  const [word, setWord] = useState(\"\");\r\n  const [options, setOptions] = useState([]);\r\n\r\n  function getWords() {\r\n    instance.get(\"words\").then((res) => {\r\n      console.log(res.data);\r\n      setWords(res.data);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    getWords();\r\n    setOptions(\r\n      [\"verb\", \"adjective\", \"noun\", \"adverb\"].sort(function () {\r\n        return 0.5 - Math.random();\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (words) {\r\n      setWord(words[0]);\r\n    }\r\n  }, [words]);\r\n  const isStepOptional = (step) => {\r\n    return false;\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n    setWord(words[activeStep + 1]);\r\n    setOptions(\r\n      [\"verb\", \"adjective\", \"noun\", \"adverb\"].sort(function () {\r\n        return 0.5 - Math.random();\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    getWords();\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Stepper activeStep={activeStep} className=\"mt-5\">\r\n        {words.map((word, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = (\r\n              <Typography variant=\"caption\">Optional</Typography>\r\n            );\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={index} {...stepProps}>\r\n              <StepLabel {...labelProps}>Question {index + 1}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      {activeStep === words.length ? (\r\n        <React.Fragment>\r\n          <Typography sx={{ mt: 2, mb: 1 }}>\r\n            All steps completed - you&apos;re finished\r\n          </Typography>\r\n          <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\r\n            <Box sx={{ flex: \"1 1 auto\" }} />\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </Box>\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <Grid container spacing={2}>\r\n            <Grid>\r\n              <CardContent className=\"mx-5 my-5\">\r\n                <Typography variant=\"h5\" component=\"div\">\r\n                  {word ? word.word : \"\"}\r\n                </Typography>\r\n              </CardContent>\r\n              <Stack spacing={5} direction=\"row\" className=\"mx-5 \">\r\n                {options.map((option, index) => {\r\n                  return (\r\n                    <>\r\n                      <Button key={index} variant=\"contained\">{option}</Button>\r\n                    </>\r\n                  );\r\n                })}\r\n                {/* <Button variant=\"contained\">Contained</Button>\r\n                <Button variant=\"contained\">Contained</Button>\r\n                <Button variant=\"contained\">Contained</Button> */}\r\n              </Stack>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* <Typography sx={{ mt: 2, mb: 1 }}>Step {activeStep + 1}</Typography> */}\r\n          <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\r\n            {/* <Button\r\n              color=\"inherit\"\r\n              disabled={activeStep === 0}\r\n              onClick={handleBack}\r\n              sx={{ mr: 1 }}\r\n            >\r\n              Back\r\n            </Button> */}\r\n            <Box sx={{ flex: \"1 1 auto\" }} />\r\n            {isStepOptional(activeStep) && (\r\n              <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\r\n                Skip\r\n              </Button>\r\n            )}\r\n            <Button onClick={handleNext}>\r\n              {activeStep === words.length - 1 ? \"Finish\" : \"Next\"}\r\n            </Button>\r\n          </Box>\r\n        </React.Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Practice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}